- support posgre sql

- [x] implement go air (hot reload)
    - implement air in docker container

- [x] setup docker and docker compose
    [x] - docker compose should setup database, run migrations and run service
    - air should run in docker container

- [x] use utc times when creating tables

- [x] implement transactions for database actions

- create a database seeder
    - [x] seed users
    - [x] seed teams
    - [x] seed user_teams
    - seed requests

- [x] team needs admin, member roletypes
- [x] rename a team
- only admin can invite to team
- only admin can edit team & remove member
- admin can send invites
    - [x] Table 'Invites'
        - Id, InviteType ('TEAMINVITE, 'GROUPINVITE'), FromUser, ToUser, status ('DECLINED, APPROVED ,OPEN')
    - [x] when user accept invite, the user joins the team

- user needs rights (admin, member) (?)
- user can get an team invite from the teamlead of a team
- user can manually be created by a admin
    - user will be informed by an email with a password which needs to be changed when first login
- user can manually be added to a team

- forgot password

- vacation request
    - [x] TABLE "Requests
        - "id, requestedFrom, teamId, fromDate, toDate, info, status, dayFactor (forenoon etc.)
            - status = "OPEN, SUBSTITUTED_MEMBER, SUBSTITUTED_TEAMLEAD, APPROVED, DECLINED, REJECTED"
    - [x] TABLE "VacationApproval"
        - "requestID, approverId (userId), status"
            - status = "OPEN, APPROVED, DECLINED"
    - [x] create a request
    - [x] set state of a request
    - get all open requests for me
    - get all requests with state and date


// Maybe use Keycloak
- user profile informations
    - vacation sum
    - current vacations
    - rename a user
    - add user profile picture

- user vacation history
    - vacations which are already used (approved and is already in the past)
